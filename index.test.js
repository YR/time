var e={daysShort:["Sun.","Mon.","Tue.","Wed.","Thur.","Fri.","Sat."],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],daySlots:{night:"night",morning:"morning",afternoon:"afternoon",evening:"evening"},monthsShort:["Jan.","Feb.","Mar.","Apr.","May","June","July","Aug.","Sep.","Oct.","Nov.","Dec."],months:["January","February","March","April","May","June","July","August","September","October","November","December"],today:"Today",tomorrow:"Tomorrow",tonight:"Tonight"},t={daysShort:["sø.","ma.","ti.","on.","to.","fr.","lø."],days:["søndag","mandag","tirsdag","onsdag","torsdag","fredag","lørdag"],daySlots:{night:"natt",morning:"morgen",afternoon:"ettermiddag",evening:"kveld"},monthsShort:["jan.","feb.","mars","apr.","mai","juni","juli","aug.","sep.","okt.","nov.","des."],months:["januar","februar","mars","april","mai","juni","juli","august","september","oktober","november","desember"],today:"i dag",tomorrow:"i morgen",tonight:"i natt"},a={Y:1,M:2,D:4,H:8,m:16,s:32,S:64},o={Y:a.S|a.s|a.m|a.H|a.D|a.M,M:a.S|a.s|a.m|a.H|a.D,D:a.S|a.s|a.m|a.H,H:a.S|a.s|a.m,m:a.S|a.s,s:a.S},r=/^(\d{2,4})-?(\d{1,2})?-?(\d{1,2})?T?(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?\.?(\d{3})?(?:Z|(([+-])(\d{2}):?(\d{2})))?$/,n=/(Y{4}|Y{2}|M{1,4}|L{3,4}|D{1,2}|d{3}r|d{2}r|d{1,4}|c{3,4}|H{1,2}r?|m{1,2}|s{1,2}|S{1,3}|ZZ)/g,c=/(\[[^\]]+\])/g,i=/(\$\d\d?)/g,u=0,s=18,l={isTime:h,init:function(e){void 0===e&&(e={}),u=e.dayStartsAt||0,s=e.nightStartsAt||18},create:function(e){return e&&"string"!=typeof e&&h(e)?e:new d(e)},now:function(){return this.create().utc()}},d=function(e){if(e&&"string"!=typeof e)return e;if(this._date="Invalid Date",this._locale=null,this._offset=0,this._offsetString="+00:00",this.isValid=!1,this.timeString="Invalid Date",null==e&&(e=function(){var e=new Date,t=-1*e.getTimezoneOffset();return e.setUTCMinutes(e.getUTCMinutes()+t),e.toISOString().replace("Z",x(t))}()),!(e.length>30)){var t=e.match(r);if(t){var a=parseInt(t[1],10),o=null==t[2]?1:parseInt(t[2],10),n=null==t[3]?1:parseInt(t[3],10),c=null==t[4]?0:parseInt(t[4],10),i=null==t[5]?0:parseInt(t[5],10),u=null==t[6]?0:parseInt(t[6],10),s=null==t[7]?0:parseInt(t[7],10),l=null==t[8]?"":t[8];l&&"+00:00"!=l&&(this._offset=("+"==t[9]?1:-1)*(60*+t[10]+ +t[11]),this._offsetString=l),this._date=new Date(Date.UTC(a,o-1,n,c,i,u,s)),this.isValid=T(this._date),this.timeString=this.toString()}}};function f(e){return e.isValid=T(e._date),e.timeString=e.toString(),e}function p(e){switch(e){case"year":case"years":case"Y":case"y":return"Y";case"month":case"months":case"M":return"M";case"day":case"days":case"date":case"dates":case"D":case"d":return"D";case"hour":case"hours":case"H":case"h":return"H";case"minute":case"minutes":case"m":return"m";case"second":case"seconds":case"s":return"s";case"millisecond":case"milliseconds":case"ms":case"S":return"S"}return e}function T(e){return"[object Date]"==Object.prototype.toString.call(e)&&!isNaN(e.getTime())}function h(e){return null!=e&&null!=e._manipulate&&null!=e._date}function m(e,t){for(e=String(e),t=t||2;e.length<t;)e="0"+e;return e}function x(e){var t=String(Math.abs(e/60)).split(".");return(e<0?"-":"+")+m(t[0])+":"+m(t[1]?.6*parseInt(t[1],10):0)}d.prototype.offset=function(e){if(null==e)return this._offset;if(e==this._offset)return this;var t=this.utc()._manipulate(e,"minutes");return t._offset=e,t._offsetString=x(e),f(t),t},d.prototype.add=function(e,t){return this._manipulate(e,t)},d.prototype.subtract=function(e,t){return this._manipulate(-1*e,t)},d.prototype.diff=function(e,t,a){if(!this.isValid)return NaN;if(!e.isValid)return NaN;var o,r=0,n=this,c=e;if("Y"==(t=p(t))||"M"==t)r=n._monthDiff(c),"Y"==t&&(r/=12);else{"D"!=t||a||(n=n.startOf("D"),c=c.startOf("D"));var i=n-c;switch(t){case"D":r=(i+6e4*(n._offset-c._offset))/864e5;break;case"H":r=i/36e5;break;case"m":r=i/6e4;break;case"s":r=i/1e3;break;default:r=i}}return a?r:(o=r)<0?Math.ceil(o):Math.floor(o)},d.prototype.startOf=function(e){if(this.isValid){e=p(e);var t=o[e],r=this.clone(),n=r._date;for(var c in a)if(t&a[c])switch(c){case"M":n.setUTCMonth(0);break;case"D":n.setUTCDate(1);break;case"H":"D"==e&&u>n.getUTCHours()&&n.setUTCDate(n.getUTCDate()-1),n.setUTCHours(u);break;case"m":n.setUTCMinutes(0);break;case"s":n.setUTCSeconds(0);break;case"S":n.setUTCMilliseconds(0)}return f(r)}return this},d.prototype.endOf=function(e){return"S"===(e=p(void 0===e?"S":e))?this.clone():this.startOf(e).add(1,e).subtract(1,"S")},d.prototype.year=function(e){return null!=e?this._set(e,"setUTCFullYear"):this._date.getUTCFullYear()},d.prototype.month=function(e){return null!=e?this._set(e,"setUTCMonth"):this._date.getUTCMonth()},d.prototype.date=function(e){return null!=e?this._set(e,"setUTCDate"):this._date.getUTCDate()},d.prototype.day=function(e){var t=this._date.getUTCDay();return null!=e?this._set(this.date()+e-t,"setUTCDate"):t},d.prototype.hour=function(e){return null!=e?this._set(e,"setUTCHours"):this._date.getUTCHours()},d.prototype.minute=function(e){return null!=e?this._set(e,"setUTCMinutes"):this._date.getUTCMinutes()},d.prototype.second=function(e){return null!=e?this._set(e,"setUTCSeconds"):this._date.getUTCSeconds()},d.prototype.millisecond=function(e){return null!=e?this._set(e,"setUTCMilliseconds"):this._date.getUTCMilliseconds()},d.prototype.isSame=function(e,t){if(!this.isValid||!e.isValid)return!1;if(!(t=p(t))||"S"==t)return+this._date==+e._date;var a=this,o=e;switch("D"==t&&(a=a.startOf(t),o=o.startOf(t)),t){case"Y":return a.year()==o.year();case"M":return a.year()==o.year()&&a.month()==o.month();case"D":return a.year()==o.year()&&a.month()==o.month()&&a.date()==o.date();case"H":return a.year()==o.year()&&a.month()==o.month()&&a.date()==o.date()&&a.hour()==o.hour();case"m":return a.year()==o.year()&&a.month()==o.month()&&a.date()==o.date()&&a.hour()==o.hour()&&a.minute()==o.minute();case"s":return a.year()==o.year()&&a.month()==o.month()&&a.date()==o.date()&&a.hour()==o.hour()&&a.minute()==o.minute()&&a.second()==o.second()}},d.prototype.isBefore=function(e,t){return!(!this.isValid||!e.isValid)&&("S"==(t=p(t))?this:this.endOf(t)).valueOf()<e.valueOf()},d.prototype.isAfter=function(e,t){if(!this.isValid||!e.isValid)return!1;var a="S"==(t=p(t))?e:e.endOf(t);return this.valueOf()>a.valueOf()},d.prototype.locale=function(e){var t=this.clone();return t._locale=e,t},d.prototype.format=function(e,t){var a=this;if(!e)return this.timeString;if(e.length>100)return"";var o=null!=t?this._getRelativeDay(t):"",r=[],u=0;return e=(e=e.replace(c,function(e){return r.push(e.slice(1,-1)),"$"+u++})).replace(n,function(e){switch(e){case"YY":return String(a.year()).slice(-2);case"YYYY":return a.year();case"M":return a.month()+1;case"MM":return m(a.month()+1);case"MMM":return a._localeHasProperty("monthsShort")?a._locale.monthsShort[a.month()]:"[missing locale]";case"MMMM":return a._localeHasProperty("months")?a._locale.months[a.month()]:"[missing locale]";case"LLL":return a._localeHasProperty("monthsShortStandalone")?a._locale.monthsShortStandalone[a.month()]:a._localeHasProperty("monthsShort")?a._locale.monthsShort[a.month()]:"[missing locale]";case"LLLL":return a._localeHasProperty("monthsStandalone")?a._locale.monthsStandalone[a.month()]:a._localeHasProperty("months")?a._locale.months[a.month()]:"[missing locale]";case"D":return a.date();case"DD":return m(a.date());case"ddr":return o?a._localeHasProperty(o)?a._locale[o]:"[missing locale]":a._localeHasProperty("daysShort")?a._locale.daysShort[a.day()]:"[missing locale]";case"dddr":return o?a._localeHasProperty(o)?a._locale[o]:"[missing locale]":a._localeHasProperty("days")?a._locale.days[a.day()]:"[missing locale]";case"d":return a.day();case"ddd":return a._localeHasProperty("daysShort")?a._locale.daysShort[a.day()]:"[missing locale]";case"dddd":return a._localeHasProperty("days")?a._locale.days[a.day()]:"[missing locale]";case"ccc":return a._localeHasProperty("daysShortStandalone")?a._locale.daysShortStandalone[a.day()]:a._localeHasProperty("daysShort")?a._locale.daysShort[a.day()]:"[missing locale]";case"cccc":return a._localeHasProperty("daysStandalone")?a._locale.daysStandalone[a.day()]:a._localeHasProperty("days")?a._locale.days[a.day()]:"[missing locale]";case"Hr":var t=a._getTimeOfDay();return a._localeHasProperty("daySlots")?a._locale.daySlots[t]:"[missing locale]";case"H":return a.hour();case"HH":return m(a.hour());case"m":return a.minute();case"mm":return m(a.minute());case"s":return a.second();case"ss":return m(a.second());case"S":return Math.floor(a.millisecond()/100);case"SS":return Math.floor(a.millisecond()/10);case"SSS":return a.millisecond();case"ZZ":return a._offsetString;default:return""}}),r.length&&(e=e.replace(i,function(e){return r[e.slice(1)]})),e},d.prototype.now=function(){var e=(new d).offset(this._offset);return e._locale=this._locale,e},d.prototype.utc=function(){if(!this._offset)return this.clone();var e=this.subtract(this._offset,"minutes");return e._offset=0,e._offsetString="+00:00",f(e)},d.prototype.clone=function(){var e=new d(this.timeString);return e._locale=this._locale,e},d.prototype._set=function(e,t){var a=this.clone();return a._date[t](e),f(a)},d.prototype._getRelativeDay=function(e){if(null!=e&&e<2){var t=this.hour();return 1==e?"tomorrow":t>=s||t<u?"tonight":"today"}return""},d.prototype._getTimeOfDay=function(){var e=this.hour();return e>=0&&e<6?"night":e>=6&&e<12?"morning":e>=12&&e<18?"afternoon":"evening"},d.prototype._localeHasProperty=function(e,t){return t?this._locale&&this._locale[e]&&this._locale[e][t]:this._locale&&this._locale[e]},d.prototype._manipulate=function(e,t){if(this.isValid){var a=this.clone(),o=a._date;switch(p(t)){case"Y":o.setUTCFullYear(o.getUTCFullYear()+e);break;case"M":o.setUTCMonth(o.getUTCMonth()+e);break;case"D":case"d":o.setUTCDate(o.getUTCDate()+e);break;case"H":o.setUTCHours(o.getUTCHours()+e);break;case"m":o.setUTCMinutes(o.getUTCMinutes()+e);break;case"s":o.setUTCSeconds(o.getUTCSeconds()+e);break;case"S":o.setUTCMilliseconds(o.getUTCMilliseconds()+e)}return f(a)}return this},d.prototype._monthDiff=function(e){var t,a=12*(e._date.getUTCFullYear()-this._date.getUTCFullYear())+(e._date.getUTCMonth()-this._date.getUTCMonth()),o=this._manipulate(a,"M");if(e._date-o._date<0){var r=this._manipulate(a-1,"M");t=(e._date-o._date)/(o._date-r._date)}else{var n=this._manipulate(a+1,"M");t=(e._date-o._date)/(n._date-o._date)}return-(a+t)},d.prototype.toString=function(){return this.isValid?this._date.toISOString().replace("Z",this._offsetString):"Invalid Date"},d.prototype.toJSON=function(){return this.timeString},d.prototype.valueOf=function(){return this.isValid?+this._date-6e4*(this._offset||0):NaN},"undefined"!=typeof window&&(window.expect=window.chai.expect),describe("time",function(){describe("create()",function(){it("should handle invalid time strings",function(){expect(l.create("foo")._date).to.equal("Invalid Date"),expect(l.create("2016-foo")._date).to.equal("Invalid Date"),expect(l.create({})).to.eql({})}),it("should handle arbitrarily long time strings",function(){expect(l.create("foo000000oooooooooooooooooooooooooo")._date).to.equal("Invalid Date")}),it("should return passed Time instance",function(){var e=l.create("2016");expect(l.create(e)).to.equal(e)}),it('should default to "now" if no time string',function(){expect(l.create()._date).to.be.a("date"),expect(l.create()._offset).to.equal(-1*(new Date).getTimezoneOffset())}),it("should handle incomplete time strings",function(){expect(l.create("2016")._date).to.be.a("date"),expect(l.create("2016+00:00")._date).to.be.a("date"),expect(l.create("2016-1")._date).to.be.a("date"),expect(l.create("2016-1+00:00")._date).to.be.a("date"),expect(l.create("2016-01-1")._date).to.be.a("date"),expect(l.create("2016-01-01T")._date).to.be.a("date"),expect(l.create("2016-01-01T00:")._date).to.be.a("date"),expect(l.create("2016-01-01T00:00:")._date).to.be.a("date"),expect(l.create("2016-01-01T00:00:00")._date).to.be.a("date"),expect(l.create("2016-01-01T00:00:00.000")._date).to.be.a("date"),expect(l.create("2016-01-01T00:00:00+01:00")._date).to.be.a("date"),expect(l.create("2016-01-01T00:00:00+0100")._date).to.be.a("date")}),it("should handle incomplete time strings, but not incomplete offsets",function(){expect(l.create("2016-01-01T00:00:00+")._date).to.equal("Invalid Date"),expect(l.create("2016-01-01T00:00:00+1")._date).to.equal("Invalid Date"),expect(l.create("2016-01-01T00:00:00+1:00")._date).to.equal("Invalid Date")}),it("should set default TZ offset if none specified",function(){expect(l.create("2016-01-01T00:00:00")._offset).to.equal(0),expect(l.create("2016-01-01T00:00:00").timeString).to.equal("2016-01-01T00:00:00.000+00:00")}),it("should set TZ offset if specified",function(){expect(l.create("2016-01-01T00:00:00+01:00")._offset).to.equal(60),expect(l.create("2016-01-01T00:00:00+01:00").timeString).to.equal("2016-01-01T00:00:00.000+01:00"),expect(l.create("2016-01-01T00:00:00-01:30")._offset).to.equal(-90),expect(l.create("2016-01-01T00:00:00-01:30").timeString).to.equal("2016-01-01T00:00:00.000-01:30")})}),describe("Time",function(){describe("toString()",function(){it("should return a string with default TZ offset",function(){expect(l.create("2015-12-31T23:59:59").toString()).to.equal("2015-12-31T23:59:59.000+00:00"),expect(l.create("2016-01-01T00:00:00").toString()).to.equal("2016-01-01T00:00:00.000+00:00")}),it("should return a string with TZ offset",function(){expect(l.create("2015-12-31T23:59:59-01:00").toString()).to.equal("2015-12-31T23:59:59.000-01:00"),expect(l.create("2016-01-01T00:00:00+01:30").toString()).to.equal("2016-01-01T00:00:00.000+01:30")})}),describe("toJSON()",function(){it("should support stringifying with default TZ offset",function(){expect(JSON.stringify({time:l.create("2015-12-31T23:59:59")})).to.equal('{"time":"2015-12-31T23:59:59.000+00:00"}'),expect(JSON.stringify({time:l.create("2016-01-01T00:00:00")})).to.equal('{"time":"2016-01-01T00:00:00.000+00:00"}')}),it("should support stringifying with TZ offset",function(){expect(l.create("2015-12-31T23:59:59-01:00").toString()).to.equal("2015-12-31T23:59:59.000-01:00"),expect(JSON.stringify({time:l.create("2015-12-31T23:59:59-01:00")})).to.equal('{"time":"2015-12-31T23:59:59.000-01:00"}'),expect(JSON.stringify({time:l.create("2016-01-01T00:00:00+01:30")})).to.equal('{"time":"2016-01-01T00:00:00.000+01:30"}')})}),describe("valueOf()",function(){it("should return milliseconds in UTC",function(){var e=-1*(new Date).getTimezoneOffset(),t=l.create(),a=t.subtract(e,"m"),o=l.create((new Date).toISOString());expect(+t-+a).to.be.within(6e4*e-20,6e4*e+20),expect(+t-+o).to.be.within(-20,20),expect(+a-+o).to.be.within(6e4*-e-20,6e4*e+20),expect(+o-Date.now()).to.be.within(-20,20)}),it("same date with different offset should not be equal",function(){var e=l.create("2016-01-01T00:00:00-01:30"),t=l.create("2016-01-01T00:00:00-00:30");expect(+e).to.not.be.equal(+t)})}),describe("getters",function(){describe("year()",function(){it("should return full year",function(){expect(l.create("2016-01-01T00:00:00").year()).to.equal(2016),expect(l.create("1916-01-01T00:00:00").year()).to.equal(1916)}),it("should return full year, accounting for TZ offset",function(){expect(l.create("2016-01-01T00:00:00-01:30").year()).to.equal(2016),expect(l.create("2016-01-01T00:00:00-00:30").year()).to.equal(2016),expect(l.create("2015-12-31T23:00:00+01:00").year()).to.equal(2015)})}),describe("month()",function(){it("should return month",function(){expect(l.create("2016-01-01T00:00:00").month()).to.equal(0),expect(l.create("2015-12-01T00:00:00").month()).to.equal(11)}),it("should return month, accounting for TZ offset",function(){expect(l.create("2016-01-01T00:00:00-01:30").month()).to.equal(0),expect(l.create("2015-12-31T23:00:00+01:00").month()).to.equal(11)})}),describe("date()",function(){it("should return date",function(){expect(l.create("2016-01-01T00:00:00").date()).to.equal(1),expect(l.create("2015-12-31T00:00:00").date()).to.equal(31)}),it("should return date, accounting for TZ offset",function(){expect(l.create("2016-01-01T00:00:00-01:30").date()).to.equal(1),expect(l.create("2015-12-31T23:00:00+01:00").date()).to.equal(31)})}),describe("day()",function(){it("should return day",function(){expect(l.create("2016-01-01T00:00:00").day()).to.equal(5),expect(l.create("2015-12-31T00:00:00").day()).to.equal(4)}),it("should return day, accounting for TZ offset",function(){expect(l.create("2016-01-01T00:00:00-01:30").day()).to.equal(5),expect(l.create("2015-12-31T23:00:00+01:00").day()).to.equal(4)})}),describe("hour()",function(){it("should return hour",function(){expect(l.create("2016-01-01T00:00:00").hour()).to.equal(0),expect(l.create("2015-12-31T23:00:00").hour()).to.equal(23)}),it("should return hour, accounting for TZ offset",function(){expect(l.create("2016-01-01T00:00:00-01:30").hour()).to.equal(0),expect(l.create("2015-12-31T23:00:00+01:00").hour()).to.equal(23)})}),describe("minute()",function(){it("should return minute",function(){expect(l.create("2016-01-01T00:00:00").minute()).to.equal(0),expect(l.create("2015-12-31T23:15:00").minute()).to.equal(15)}),it("should return minute, accounting for TZ offset",function(){expect(l.create("2016-01-01T00:00:00-01:30").minute()).to.equal(0),expect(l.create("2015-12-31T23:15:00+01:15").minute()).to.equal(15)})})}),describe("setters",function(){describe("year()",function(){it("should set full year",function(){expect(l.create("2016-01-01T00:00:00").year(2015).year()).to.equal(2015),expect(l.create("1916-01-01T00:00:00").year(1915).year()).to.equal(1915)}),it("should handle invalid value",function(){expect(isNaN(l.create("2016-01-01T00:00:00").year("foo").year())).to.equal(!0),expect(l.create("2016-01-01T00:00:00").year("foo").isValid).to.equal(!1)})}),describe("month()",function(){it("should set month",function(){expect(l.create("2016-01-01T00:00:00").month(3).month()).to.equal(3)}),it("should handle invalid value",function(){expect(isNaN(l.create("2016-01-01T00:00:00").month("foo").month())).to.equal(!0),expect(l.create("2016-01-01T00:00:00").month("foo").isValid).to.equal(!1)})}),describe("date()",function(){it("should set date",function(){expect(l.create("2016-01-01T00:00:00").date(3).date()).to.equal(3)}),it("should handle invalid value",function(){expect(isNaN(l.create("2016-01-01T00:00:00").date("foo").date())).to.equal(!0),expect(l.create("2016-01-01T00:00:00").date("foo").isValid).to.equal(!1)})}),describe("hour()",function(){it("should set hour",function(){expect(l.create("2016-01-01T00:00:00").hour(3).hour()).to.equal(3)}),it("should handle invalid value",function(){expect(isNaN(l.create("2016-01-01T00:00:00").hour("foo").hour())).to.equal(!0),expect(l.create("2016-01-01T00:00:00").hour("foo").isValid).to.equal(!1)})}),describe("minute()",function(){it("should set minute",function(){expect(l.create("2016-01-01T00:00:00").minute(3).minute()).to.equal(3)}),it("should handle invalid value",function(){expect(isNaN(l.create("2016-01-01T00:00:00").minute("foo").minute())).to.equal(!0),expect(l.create("2016-01-01T00:00:00").minute("foo").isValid).to.equal(!1)})}),describe("second()",function(){it("should set second",function(){expect(l.create("2016-01-01T00:00:00").second(3).second()).to.equal(3)}),it("should handle invalid value",function(){expect(isNaN(l.create("2016-01-01T00:00:00").second("foo").second())).to.equal(!0),expect(l.create("2016-01-01T00:00:00").second("foo").isValid).to.equal(!1)})}),describe("millisecond()",function(){it("should set millisecond",function(){expect(l.create("2016-01-01T00:00:00").millisecond(3).millisecond()).to.equal(3)}),it("should handle invalid value",function(){expect(isNaN(l.create("2016-01-01T00:00:00").millisecond("foo").millisecond())).to.equal(!0),expect(l.create("2016-01-01T00:00:00").millisecond("foo").isValid).to.equal(!1)})})}),describe("clone()",function(){it("should create a new copy with same values as the original",function(){var e=l.create("2015-12-31T23:15:00+01:15"),t=e.clone();expect(t).to.not.equal(e),expect(t._date.toISOString()).to.equal(e._date.toISOString()),expect(t._offset).to.equal(e._offset)}),it("should create a new copy with same values as the original, even if invalid",function(){var e=l.create("foo"),t=e.clone();expect(t).to.not.equal(e),expect(t._date).to.equal(e._date),expect(t._offset).to.equal(e._offset)})}),describe("offset()",function(){it("should return offset if no offset value",function(){var e=l.create("2016-01-01T00:00:00+01:00");expect(e.offset()).to.equal(60)}),it("should return same instance if same offset",function(){var e=l.create("2016-01-01T00:00:00+01:00");expect(e.offset(60)).to.equal(e)}),it("should return a new instance with new offset",function(){var e=l.create("2016-01-01T00:00:00+01:00"),t=e.offset(-60);expect(e).to.not.equal(t),expect(+t.utc()).to.equal(+e.utc()),expect(t.toString()).to.equal("2015-12-31T22:00:00.000-01:00")})}),describe("utc()",function(){it("should return a cloned instance when no TZ offset",function(){var e=l.create("2016-01-01T00:00:00"),t=e.utc();expect(e).to.not.equal(t),expect(e.timeString).to.equal(t.timeString)}),it("should return a utc instance",function(){var e=l.create("2016-01-01T00:00:00-02:00"),t=e.utc();expect(e).to.not.equal(t),expect(t.timeString).to.equal("2016-01-01T02:00:00.000+00:00"),expect(t._offset).to.equal(0)})}),describe("now()",function(){it("should return an instance with current time",function(){var e=l.create("2016-01-01T00:00:00+00:00").now(),t=Date.now();expect(t-+e).to.be.within(0,20)}),it("should return an instance with current time, preserving offset",function(){var e=l.create("2016-01-01T02:00:00+02:00").now(),t=Date.now();expect(t-+e.utc()).to.be.within(0,20)})}),describe("manipulation",function(){describe("add()",function(){it("should return a new instance with added years",function(){var e=l.create("2015-12-31T23:15:00"),t=e.add(1,"Y");expect(t).to.not.equal(e),expect(t.year()).to.equal(2016),expect(t.timeString).to.equal("2016-12-31T23:15:00.000+00:00")}),it("should return a new instance with added months",function(){var e=l.create("2015-12-31T23:15:00"),t=e.add(1,"M");expect(t).to.not.equal(e),expect(t.month()).to.equal(0),expect(t.timeString).to.equal("2016-01-31T23:15:00.000+00:00"),expect(t.add(14,"M").year()).to.equal(2017)}),it("should return a new instance with added days",function(){var e=l.create("2015-12-31T23:15:00"),t=e.add(1,"D");expect(t).to.not.equal(e),expect(t.date()).to.equal(1),expect(t.day()).to.equal(5),expect(t.month()).to.equal(0),expect(t.add(365,"D").year()).to.equal(2016)}),it("should return a new instance with added hours",function(){var e=l.create("2015-12-31T23:15:00"),t=e.add(1,"H");expect(t).to.not.equal(e),expect(t.hour()).to.equal(0),expect(t.date()).to.equal(1),expect(t.day()).to.equal(5),expect(t.month()).to.equal(0),expect(t.add(28,"H").date()).to.equal(2)}),it("should return a new instance with added minutes",function(){var e=l.create("2015-12-31T23:15:00"),t=e.add(30,"m");expect(t).to.not.equal(e),expect(t.minute()).to.equal(45),expect(t.hour()).to.equal(23),expect(t.date()).to.equal(31),expect(t.day()).to.equal(4),expect(t.month()).to.equal(11),expect(t.add(75,"m").hour()).to.equal(1),expect(t.add(75,"m").minute()).to.equal(0)})}),describe("subtract()",function(){it("should return a new instance with subtracted years",function(){var e=l.create("2015-12-31T23:15:00"),t=e.subtract(1,"Y");expect(t).to.not.equal(e),expect(t.year()).to.equal(2014)}),it("should return a new instance with subtracted months",function(){var e=l.create("2015-12-31T23:15:00"),t=e.subtract(1,"M");expect(t).to.not.equal(e),expect(t.month()).to.equal(11),expect(t.subtract(14,"M").year()).to.equal(2014)}),it("should return a new instance with subtracted days",function(){var e=l.create("2016-01-01T00:15:00"),t=e.subtract(1,"D");expect(t).to.not.equal(e),expect(t.date()).to.equal(31),expect(t.day()).to.equal(4),expect(t.month()).to.equal(11),expect(t.subtract(366,"D").year()).to.equal(2014)}),it("should return a new instance with subtracted hours",function(){var e=l.create("2016-01-01T00:15:00"),t=e.subtract(1,"H");expect(t).to.not.equal(e),expect(t.hour()).to.equal(23),expect(t.date()).to.equal(31),expect(t.day()).to.equal(4),expect(t.month()).to.equal(11),expect(t.subtract(28,"H").date()).to.equal(30)}),it("should return a new instance with subtracted minutes",function(){var e=l.create("2016-01-01T00:15:00"),t=e.subtract(30,"m");expect(t).to.not.equal(e),expect(t.minute()).to.equal(45),expect(t.hour()).to.equal(23),expect(t.date()).to.equal(31),expect(t.day()).to.equal(4),expect(t.month()).to.equal(11),expect(t.subtract(75,"m").hour()).to.equal(22),expect(t.subtract(75,"m").minute()).to.equal(30)})}),describe("startOf()",function(){it("should set time to start of year",function(){expect(l.create("2015-12-31T23:59:59").startOf("Y").timeString).to.equal("2015-01-01T00:00:00.000+00:00")}),it("should set time to start of month",function(){expect(l.create("2015-12-31T23:59:59").startOf("M").timeString).to.equal("2015-12-01T00:00:00.000+00:00")}),it("should set time to start of day",function(){expect(l.create("2015-12-31T23:59:59").startOf("D").timeString).to.equal("2015-12-31T00:00:00.000+00:00")}),it("should set time to start of hour",function(){expect(l.create("2015-12-31T23:59:59").startOf("H").timeString).to.equal("2015-12-31T23:00:00.000+00:00")}),it("should set time to start of minute",function(){expect(l.create("2015-12-31T23:59:59").startOf("m").timeString).to.equal("2015-12-31T23:59:00.000+00:00")}),it("should set time to start of second",function(){expect(l.create("2015-12-31T23:59:59").startOf("s").timeString).to.equal("2015-12-31T23:59:59.000+00:00")}),it("should set time to custom day start value",function(){l.init({dayStartsAt:6}),expect(l.create("2015-12-31T23:59:59").startOf("D").timeString).to.equal("2015-12-31T06:00:00.000+00:00"),expect(l.create("2015-12-31T00:00:00").startOf("D").timeString).to.equal("2015-12-30T06:00:00.000+00:00"),l.init()})}),describe("endOf()",function(){var e=l.create("2016-01-01T01:00:01.123+01:21");it("should passthrough if ms is unit",function(){expect(e.endOf("S").timeString).to.equal(e.timeString),expect(e.endOf().timeString).to.equal(e.timeString)}),it("should round off to end of unit",function(){expect(e.endOf("s").timeString).to.equal("2016-01-01T01:00:01.999+01:21"),expect(e.endOf("m").timeString).to.equal("2016-01-01T01:00:59.999+01:21"),expect(e.endOf("H").timeString).to.equal("2016-01-01T01:59:59.999+01:21"),expect(e.endOf("D").timeString).to.equal("2016-01-01T23:59:59.999+01:21"),expect(e.endOf("M").timeString).to.equal("2016-01-31T23:59:59.999+01:21"),expect(e.endOf("Y").timeString).to.equal("2016-12-31T23:59:59.999+01:21")})})}),describe("diff()",function(){it("should return the difference in years between two instances",function(){expect(l.create("2016-01-01T00:00:00").diff(l.create("2015-01-01T00:00:00"),"Y",!1)).to.equal(1),expect(l.create("2015-01-01T00:00:00").diff(l.create("2016-01-01T00:00:00"),"Y",!1)).to.equal(-1),expect(l.create("2016-01-01T00:00:00").diff(l.create("2015-06-01T00:00:00"),"Y",!1)).to.equal(0)}),it("should return the difference in years between two instances as float",function(){expect(l.create("2016-01-01T00:00:00").diff(l.create("2015-01-01T00:00:00"),"Y",!0)).to.equal(1),expect(l.create("2015-01-01T00:00:00").diff(l.create("2016-01-01T00:00:00"),"Y",!0)).to.equal(-1),expect(l.create("2016-01-01T00:00:00").diff(l.create("2015-07-01T00:00:00"),"Y",!0)).to.equal(.5)}),it("should return the difference in months between two instances",function(){expect(l.create("2016-01-01T00:00:00").diff(l.create("2015-01-01T00:00:00"),"M",!1)).to.equal(12),expect(l.create("2015-01-01T00:00:00").diff(l.create("2016-01-01T00:00:00"),"M",!1)).to.equal(-12),expect(l.create("2016-01-01T00:00:00").diff(l.create("2015-07-01T00:00:00"),"M",!1)).to.equal(6)}),it("should return the difference in months between two instances as float",function(){expect(l.create("2016-01-01T00:00:00").diff(l.create("2015-01-01T00:00:00"),"M",!0)).to.equal(12),expect(l.create("2015-01-01T00:00:00").diff(l.create("2016-01-01T00:00:00"),"M",!0)).to.equal(-12),expect(l.create("2016-01-01T00:00:00").diff(l.create("2015-12-16T00:00:00"),"M",!0)).to.equal(16/31)}),it("should return the difference in days between two instances",function(){expect(l.create("2016-01-01T00:00:00").diff(l.create("2015-12-31T00:00:00"),"D",!1)).to.equal(1),expect(l.create("2015-12-31T00:00:00").diff(l.create("2016-01-01T00:00:00"),"D",!1)).to.equal(-1),expect(l.create("2016-01-01T00:00:00").diff(l.create("2015-12-31T06:00:00"),"D",!1)).to.equal(1),expect(l.create("2016-01-01T07:00:00").diff(l.create("2016-01-01T05:00:00"),"D",!1)).to.equal(0)}),it("should return the difference in days between two instances as float",function(){expect(l.create("2016-01-01T00:00:00").diff(l.create("2015-12-31T00:00:00"),"D",!0)).to.equal(1),expect(l.create("2015-12-31T00:00:00").diff(l.create("2016-01-01T00:00:00"),"D",!0)).to.equal(-1),expect(l.create("2016-01-01T00:00:00").diff(l.create("2015-12-31T06:00:00"),"D",!0)).to.equal(.75)}),it("should return the difference in hours between two instances",function(){expect(l.create("2016-01-01T00:00:00").diff(l.create("2016-01-01T01:00:00"),"H",!1)).to.equal(-1),expect(l.create("2016-01-01T01:00:00").diff(l.create("2016-01-01T00:00:00"),"H",!1)).to.equal(1),expect(l.create("2016-01-01T00:00:00").diff(l.create("2016-01-01T00:45:00"),"H",!1)).to.equal(0)}),it("should return the difference in hours between two instances as float",function(){expect(l.create("2016-01-01T00:00:00").diff(l.create("2016-01-01T01:00:00"),"H",!0)).to.equal(-1),expect(l.create("2016-01-01T01:00:00").diff(l.create("2016-01-01T00:00:00"),"H",!0)).to.equal(1),expect(l.create("2016-01-01T00:00:00").diff(l.create("2016-01-01T00:45:00"),"H",!0)).to.equal(-.75)}),it("should return the difference in minutes between two instances",function(){expect(l.create("2016-01-01T01:00:00").diff(l.create("2016-01-01T00:59:00"),"m",!1)).to.equal(1),expect(l.create("2016-01-01T00:59:00").diff(l.create("2016-01-01T01:00:00"),"m",!1)).to.equal(-1),expect(l.create("2016-01-01T00:00:00").diff(l.create("2016-01-01T00:00:45"),"m",!1)).to.equal(0)}),it("should return the difference in minutes between two instances as float",function(){expect(l.create("2016-01-01T01:00:00").diff(l.create("2016-01-01T00:59:00"),"m",!0)).to.equal(1),expect(l.create("2016-01-01T00:59:00").diff(l.create("2016-01-01T01:00:00"),"m",!0)).to.equal(-1),expect(l.create("2016-01-01T01:00:00").diff(l.create("2016-01-01T00:59:30"),"m",!0)).to.equal(.5)}),it("should handle custom start values",function(){l.init({dayStartsAt:6}),expect(l.create("2016-01-01T07:00:00").diff(l.create("2016-01-01T05:00:00"),"D",!1)).to.equal(1),expect(l.create("2016-01-01T07:00:00").diff(l.create("2016-01-01T05:00:00"),"D",!0)).to.equal(2/24),expect(l.create("2016-01-01T00:00:00").diff(l.create("2016-01-01T00:00:00"),"D",!1)).to.equal(0),expect(l.create("2016-01-01T23:00:00").diff(l.create("2016-01-01T12:00:00"),"D",!1)).to.equal(0),expect(l.create("2016-01-01T05:59:00").diff(l.create("2015-12-31T12:00:00"),"D",!1)).to.equal(0),expect(l.create("2016-01-01T06:01:00").diff(l.create("2016-01-01T05:59:00"),"D",!1)).to.equal(1),expect(l.create("2016-01-02T06:00:00").diff(l.create("2016-01-01T06:00:00"),"D",!1)).to.equal(1),expect(l.create("2016-01-04T05:59:00").diff(l.create("2016-01-01T06:01:00"),"D",!1)).to.equal(2),l.init()}),it("should handle values with different offsets",function(){expect(l.create("2016-10-30T02:00:00+01:00").diff(l.create("2016-10-30T02:00:00+02:00"),"H",!0)).to.equal(1)}),it("should ignore offsets when comparing units > hours",function(){expect(l.create("2016-10-31T00:00:00+01:00").diff(l.create("2016-10-30T23:00:00+02:00"),"D",!1)).to.equal(1),expect(l.create("2016-10-31T00:00:00+01:00").diff(l.create("2016-10-30T12:00:00+02:00"),"D",!0)).to.equal(.5),expect(l.create("2016-10-31T23:00:00+01:00").diff(l.create("2016-11-01T:00:00+02:00"),"M",!0)).not.to.equal(0)})}),describe("isSame()",function(){it('should return "false" for invalid',function(){expect(l.create("foo").isSame(l.create("2016-01-01T00:00:00"))).to.equal(!1),expect(l.create("2016-01-01T00:00:00").isSame(l.create("foo"))).to.equal(!1)}),it('should return "true" for same',function(){var e=l.create("2016-01-01T00:00:00");expect(e.isSame(l.create("2016-01-01T00:00:00"))).to.equal(!0),expect(e.isSame(e.clone())).to.equal(!0)}),it('should return "true" for same year',function(){expect(l.create("2016-01-01T00:00:00").isSame(l.create("2016-02-01T00:00:00"),"Y")).to.equal(!0)}),it('should return "true" for same month',function(){expect(l.create("2016-01-01T00:00:00").isSame(l.create("2016-01-02T00:00:00"),"M")).to.equal(!0)}),it('should return "true" for same day',function(){expect(l.create("2016-01-01T00:00:00").isSame(l.create("2016-01-01T01:00:00"),"D")).to.equal(!0)}),it("should handle custom day start values",function(){l.init({dayStartsAt:6}),expect(l.create("2016-01-01T05:00:00").isSame(l.create("2016-01-01T07:00:00"),"D")).to.equal(!1),expect(l.create("2016-01-01T06:00:00").isSame(l.create("2016-01-01T07:00:00"),"D")).to.equal(!0),expect(l.create("2016-01-01T00:00:00").isSame(l.create("2016-01-01T00:00:00"),"D")).to.equal(!0),expect(l.create("2016-01-01T23:00:00").isSame(l.create("2016-01-01T12:00:00"),"D")).to.equal(!0),expect(l.create("2016-01-01T01:00:00").isSame(l.create("2016-01-01T02:00:00"),"D")).to.equal(!0),expect(l.create("2016-01-01T05:59:00").isSame(l.create("2015-12-31T12:00:00"),"D")).to.equal(!0),expect(l.create("2016-01-01T05:59:00").isSame(l.create("2016-01-01T06:00:00"),"D")).to.equal(!1),l.init()}),it('should return "true" for same hour',function(){expect(l.create("2016-01-01T00:00:00").isSame(l.create("2016-01-01T00:59:00"),"H")).to.equal(!0)}),it('should return "true" for same minute',function(){expect(l.create("2016-01-01T00:00:00").isSame(l.create("2016-01-01T00:00:59"),"m")).to.equal(!0)}),it('should return "true" for same second',function(){expect(l.create("2016-01-01T00:00:00").isSame(l.create("2016-01-01T00:00:00"),"s")).to.equal(!0)})}),describe("isBefore()",function(){it('should return "false" for invalid',function(){expect(l.create("foo").isBefore(l.create("2016-01-01T00:00:00"))).to.equal(!1),expect(l.create("2016-01-01T00:00:00").isBefore(l.create("foo"))).to.equal(!1)}),it('should return "false" for same',function(){var e=l.create("2016-01-01T00:00:00");expect(e.isBefore(l.create("2016-01-01T00:00:00"))).to.equal(!1),expect(e.isBefore(e.clone())).to.equal(!1)}),it('should return "true" for year',function(){expect(l.create("2015-01-01T00:00:00").isBefore(l.create("2016-01-01T00:00:00"),"Y")).to.equal(!0)}),it('should return "true" for month',function(){expect(l.create("2015-01-01T00:00:00").isBefore(l.create("2016-01-01T00:00:00"),"M")).to.equal(!0),expect(l.create("2016-01-01T00:00:00").isBefore(l.create("2016-02-01T00:00:00"),"M")).to.equal(!0)}),it('should return "true" for day',function(){expect(l.create("2015-01-01T00:00:00").isBefore(l.create("2016-01-01T00:00:00"),"D")).to.equal(!0),expect(l.create("2016-01-01T00:00:00").isBefore(l.create("2016-02-01T00:00:00"),"D")).to.equal(!0),expect(l.create("2016-01-01T00:00:00").isBefore(l.create("2016-01-02T00:00:00"),"D")).to.equal(!0)}),it('should return "true" for hour',function(){expect(l.create("2015-01-01T00:00:00").isBefore(l.create("2016-01-01T00:00:00"),"H")).to.equal(!0),expect(l.create("2016-01-01T00:00:00").isBefore(l.create("2016-02-01T00:00:00"),"H")).to.equal(!0),expect(l.create("2016-01-01T00:00:00").isBefore(l.create("2016-01-02T00:00:00"),"H")).to.equal(!0),expect(l.create("2016-01-01T00:00:00").isBefore(l.create("2016-01-01T01:00:00"),"H")).to.equal(!0)}),it('should return "true" for minute',function(){expect(l.create("2015-01-01T00:00:00").isBefore(l.create("2016-01-01T00:00:00"),"m")).to.equal(!0),expect(l.create("2016-01-01T00:00:00").isBefore(l.create("2016-02-01T00:00:00"),"m")).to.equal(!0),expect(l.create("2016-01-01T00:00:00").isBefore(l.create("2016-01-02T00:00:00"),"m")).to.equal(!0),expect(l.create("2016-01-01T00:00:00").isBefore(l.create("2016-01-01T01:00:00"),"m")).to.equal(!0),expect(l.create("2016-01-01T00:00:00").isBefore(l.create("2016-01-01T00:01:00"),"m")).to.equal(!0)}),it('should return "true" for offsets',function(){expect(l.create("2016-01-01T00:00:00+02:00").isBefore(l.create("2016-01-01T00:00:00+01:00"),"H")).to.equal(!0),expect(l.create("2016-01-01T00:00:00+02:00").isBefore(l.create("2016-01-01T00:00:00+01:00"),"m")).to.equal(!0)}),it('should return "false" for too small offsets',function(){expect(l.create("2016-01-01T00:00:00+02:00").isBefore(l.create("2016-01-01T00:00:00+01:00"),"M")).to.equal(!1),expect(l.create("2016-01-01T00:00:00+02:00").isBefore(l.create("2016-01-01T00:00:00+01:00"),"D")).to.equal(!1)})}),describe("isAfter()",function(){it('should return "false" for invalid',function(){expect(l.create("foo").isAfter(l.create("2016-01-01T00:00:00"))).to.equal(!1),expect(l.create("2016-01-01T00:00:00").isAfter(l.create("foo"))).to.equal(!1)}),it('should return "false" for same',function(){var e=l.create("2016-01-01T00:00:00");expect(e.isAfter(l.create("2016-01-01T00:00:00"))).to.equal(!1),expect(e.isAfter(e.clone())).to.equal(!1)}),it('should return "true" for year',function(){expect(l.create("2016-01-01T00:00:00").isAfter(l.create("2015-01-01T00:00:00"),"Y")).to.equal(!0)}),it('should return "true" for month',function(){expect(l.create("2016-01-01T00:00:00").isAfter(l.create("2015-01-01T00:00:00"),"M")).to.equal(!0),expect(l.create("2016-02-01T00:00:00").isAfter(l.create("2016-01-01T00:00:00"),"M")).to.equal(!0)}),it('should return "true" for day',function(){expect(l.create("2016-01-01T00:00:00").isAfter(l.create("2015-01-01T00:00:00"),"D")).to.equal(!0),expect(l.create("2016-02-01T00:00:00").isAfter(l.create("2016-01-01T00:00:00"),"D")).to.equal(!0),expect(l.create("2016-01-02T00:00:00").isAfter(l.create("2016-01-01T00:00:00"),"D")).to.equal(!0)}),it('should return "true" for hour',function(){expect(l.create("2016-01-01T00:00:00").isAfter(l.create("2015-01-01T00:00:00"),"H")).to.equal(!0),expect(l.create("2016-02-01T00:00:00").isAfter(l.create("2016-01-01T00:00:00"),"H")).to.equal(!0),expect(l.create("2016-01-02T00:00:00").isAfter(l.create("2016-01-01T00:00:00"),"H")).to.equal(!0),expect(l.create("2016-01-01T01:00:00").isAfter(l.create("2016-01-01T00:00:00"),"H")).to.equal(!0)}),it('should return "true" for minute',function(){expect(l.create("2016-01-01T00:00:00").isAfter(l.create("2015-01-01T00:00:00"),"m")).to.equal(!0),expect(l.create("2016-02-01T00:00:00").isAfter(l.create("2016-01-01T00:00:00"),"m")).to.equal(!0),expect(l.create("2016-01-02T00:00:00").isAfter(l.create("2016-01-01T00:00:00"),"m")).to.equal(!0),expect(l.create("2016-01-01T01:00:00").isAfter(l.create("2016-01-01T00:00:00"),"m")).to.equal(!0),expect(l.create("2016-01-01T00:01:00").isAfter(l.create("2016-01-01T00:00:00"),"m")).to.equal(!0)}),it('should return "true" for offsets',function(){expect(l.create("2016-01-01T00:00:00+01:00").isAfter(l.create("2016-01-01T00:00:00+02:00"),"H")).to.equal(!0),expect(l.create("2016-01-01T00:00:00+01:00").isAfter(l.create("2016-01-01T00:00:00+02:00"),"m")).to.equal(!0)}),it('should return "false" for too small offsets',function(){expect(l.create("2016-01-01T00:00:00+01:00").isAfter(l.create("2016-01-01T00:00:00+02:00"),"M")).to.equal(!1),expect(l.create("2016-01-01T00:00:00+01:00").isAfter(l.create("2016-01-01T00:00:00+02:00"),"D")).to.equal(!1)})}),describe("format()",function(){it("should handle year masks",function(){expect(l.create("2016-01-01T00:00:00").format("YY")).to.equal("16"),expect(l.create("2016-01-01T00:00:00").format("YYYY")).to.equal("2016"),expect(l.create("2016-01-01T00:00:00-01:00").format("YYYY")).to.equal("2016")}),it("should handle month masks",function(){expect(l.create("2016-01-01T00:00:00").format("M")).to.equal("1"),expect(l.create("2016-01-01T00:00:00").format("MM")).to.equal("01"),expect(l.create("2016-01-01T00:00:00").locale(e).format("MMM")).to.equal("Jan."),expect(l.create("2016-01-01T00:00:00").locale(e).format("MMMM")).to.equal("January"),expect(l.create("2016-01-01T00:00:00-01:00").locale(e).format("MMMM")).to.equal("January")}),it("should handle standalone month masks",function(){var t=Object.assign({},e,{monthsShortStandalone:["Jan. (standalone)","Feb. (standalone)","Mar. (standalone)","Apr. (standalone)","May (standalone)","June (standalone)","July (standalone)","Aug. (standalone)","Sep. (standalone)","Oct. (standalone)","Nov. (standalone)","Dec. (standalone)"],monthsStandalone:["January (standalone)","February (standalone)","March (standalone)","April (standalone)","May (standalone)","June (standalone)","July (standalone)","August (standalone)","September (standalone)","October (standalone)","November (standalone)","December (standalone)"]});expect(l.create("2016-01-01T00:00:00").locale(t).format("LLL")).to.equal("Jan. (standalone)"),expect(l.create("2016-01-01T00:00:00").locale(t).format("LLLL")).to.equal("January (standalone)"),expect(l.create("2016-01-01T00:00:00-01:00").locale(t).format("LLLL")).to.equal("January (standalone)")}),it("should fallback to month masks if standalone months are not defined",function(){expect(l.create("2016-01-01T00:00:00").locale(e).format("LLL")).to.equal("Jan."),expect(l.create("2016-01-01T00:00:00").locale(e).format("LLLL")).to.equal("January"),expect(l.create("2016-01-01T00:00:00-01:00").locale(e).format("LLLL")).to.equal("January")}),it("should handle day of month masks",function(){expect(l.create("2016-01-01T00:00:00").format("D")).to.equal("1"),expect(l.create("2016-01-01T00:00:00").format("DD")).to.equal("01"),expect(l.create("2016-01-01T00:00:00-01:00").format("DD")).to.equal("01")}),it("should handle day of week masks",function(){expect(l.create("2016-01-01T00:00:00").format("d")).to.equal("5"),expect(l.create("2016-01-01T00:00:00").locale(e).format("ddd")).to.equal("Fri."),expect(l.create("2016-01-01T00:00:00").locale(e).format("dddd")).to.equal("Friday"),expect(l.create("2016-01-01T00:00:00-01:00").locale(e).format("dddd")).to.equal("Friday")}),it("should handle standalone day of week masks",function(){var t=Object.assign({},e,{daysShortStandalone:["Sun. (standalone)","Mon. (standalone)","Tue. (standalone)","Wed. (standalone)","Thur. (standalone)","Fri. (standalone)","Sat. (standalone)"],daysStandalone:["Sunday (standalone)","Monday (standalone)","Tuesday (standalone)","Wednesday (standalone)","Thursday (standalone)","Friday (standalone)","Saturday (standalone)"]});expect(l.create("2016-01-01T00:00:00").locale(t).format("ccc")).to.equal("Fri. (standalone)"),expect(l.create("2016-01-01T00:00:00").locale(t).format("cccc")).to.equal("Friday (standalone)"),expect(l.create("2016-01-01T00:00:00-01:00").locale(t).format("cccc")).to.equal("Friday (standalone)")}),it("should fallback to day of week masks if standalone day of weeks are not defined",function(){expect(l.create("2016-01-01T00:00:00").locale(e).format("ccc")).to.equal("Fri."),expect(l.create("2016-01-01T00:00:00").locale(e).format("cccc")).to.equal("Friday"),expect(l.create("2016-01-01T00:00:00-01:00").locale(e).format("cccc")).to.equal("Friday")}),it("should handle hour masks",function(){expect(l.create("2016-01-01T00:00:00").format("H")).to.equal("0"),expect(l.create("2016-01-01T00:00:00").format("HH")).to.equal("00"),expect(l.create("2015-12-31T23:00:00").format("HH")).to.equal("23"),expect(l.create("2016-01-01T00:00:00-01:00").format("HH")).to.equal("00")}),it("should handle minute masks",function(){expect(l.create("2016-01-01T00:00:00").format("m")).to.equal("0"),expect(l.create("2016-01-01T00:00:00").format("mm")).to.equal("00"),expect(l.create("2016-01-01T00:15:00").format("mm")).to.equal("15"),expect(l.create("2016-01-01T00:00:00+00:15").format("mm")).to.equal("00")}),it("should handle second masks",function(){expect(l.create("2016-01-01T00:00:00").format("s")).to.equal("0"),expect(l.create("2016-01-01T00:00:00").format("ss")).to.equal("00"),expect(l.create("2016-01-01T00:00:15").format("ss")).to.equal("15")}),it("should handle fractional second masks",function(){expect(l.create("2016-01-01T00:00:00.555").format("S")).to.equal("5"),expect(l.create("2016-01-01T00:00:00.300").format("SS")).to.equal("30"),expect(l.create("2016-01-01T00:00:00.900").format("SSS")).to.equal("900")}),it("should handle offset masks",function(){expect(l.create("2016-01-01T00:00:00+02:00").format("ZZ")).to.equal("+02:00")}),it("should handle masks when missing locale",function(){expect(l.create("2016-01-01T00:00:00").format("MMM")).to.equal("[missing locale]")}),it("should ignore escaped content",function(){expect(l.create("2016-01-01T07:00:00").format("[Do not] D [Man]")).to.equal("Do not 1 Man")}),it("should handle relative day masks",function(){l.init({dayStartsAt:6}),expect(l.create("2016-01-01T07:00:00").locale(e).format("ddr",0)).to.equal("Today"),expect(l.create("2016-01-01T07:00:00").locale(e).format("ddr")).to.equal("Fri."),expect(l.create("2016-01-01T07:00:00").locale(e).format("dddr",0)).to.equal("Today"),expect(l.create("2016-01-01T07:00:00").locale(e).format("dddr")).to.equal("Friday"),expect(l.create("2016-01-01T07:00:00").locale(e).format("dddr",1)).to.equal("Tomorrow"),expect(l.create("2016-01-01T19:00:00").locale(e).format("dddr",0)).to.equal("Tonight"),l.init()}),it('should handle "HR" format',function(){expect(l.create("2016-01-01T07:00:00").locale(t).format("Hr",0)).to.equal("morgen")}),it("should return evening between 00:00:00 and 05:59:59",function(){expect(l.create("2016-01-01T00:00:00").locale(t).format("Hr",0)).to.equal("natt"),expect(l.create("2016-01-01T03:00:00").locale(t).format("Hr",0)).to.equal("natt"),expect(l.create("2016-01-01T05:59:59").locale(t).format("Hr",0)).to.equal("natt")}),it("should return morning between 06:00:00 and 11:59:59",function(){expect(l.create("2016-01-01T06:00:00").locale(t).format("Hr",0)).to.equal("morgen"),expect(l.create("2016-01-01T09:00:00").locale(t).format("Hr",0)).to.equal("morgen"),expect(l.create("2016-01-01T11:59:59").locale(t).format("Hr",0)).to.equal("morgen")}),it("should return afternoon between 12:00:00 and 17:59:59",function(){expect(l.create("2016-01-01T12:00:00").locale(t).format("Hr",0)).to.equal("ettermiddag"),expect(l.create("2016-01-01T15:00:00").locale(t).format("Hr",0)).to.equal("ettermiddag"),expect(l.create("2016-01-01T17:59:59").locale(t).format("Hr",0)).to.equal("ettermiddag")}),it("should return evening between 18:00:00 and 23:59:59",function(){expect(l.create("2016-01-01T18:00:00").locale(t).format("Hr",0)).to.equal("kveld"),expect(l.create("2016-01-01T21:00:00").locale(t).format("Hr",0)).to.equal("kveld"),expect(l.create("2016-01-01T23:59:59").locale(t).format("Hr",0)).to.equal("kveld")}),it("should return [missing locale] when locale is not set up",function(){expect(l.create("2016-01-01T18:00:00").format("Hr",0)).to.equal("[missing locale]")})})}),describe("now()",function(){it("should return an instance for current time in UTC",function(){var e=l.now(),t=Date.now();expect(+l.create()-+e).to.be.within(-20,20),expect(t-+e).to.be.within(0,2),expect(e._offset).to.equal(0)})}),describe("isTime()",function(){it('should return "true" for Time instances',function(){expect(l.isTime(l.create())).to.equal(!0)}),it('should return "false" for non-Time instances',function(){expect(l.isTime(null)).to.equal(!1),expect(l.isTime(!1)).to.equal(!1),expect(l.isTime("")).to.equal(!1),expect(l.isTime({})).to.equal(!1)})})});
